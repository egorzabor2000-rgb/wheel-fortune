class RaiParadiseApp {
    constructor() {
        this.currentTab = 'wheel';
        this.coinBalance = 0;
        this.ticketBalance = 3;
        this.purchasedTickets = {
            beer: 0,
            massage: 0,
            sauna: 0,
            iphone: 0
        };
        this.userStats = {
            totalSpins: 0,
            totalCoinsWon: 0,
            friendsInvited: 0,
            tasksCompleted: 0
        };
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
        this.completedTasks = {
            telegram: false,
            instagram: false,
            video: false,
            invite: false,
            warmup: false
        };
        
        // –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –ø—Ä–æ–≥—Ä–µ–≤–∞-–≥–∞–π–¥—É
        this.warmupProgress = {
            block1: Array(4).fill(false), // 4 –≤–∏–¥–µ–æ –≤ –±–ª–æ–∫–µ 1
            block2: Array(4).fill(false), // 4 –≤–∏–¥–µ–æ –≤ –±–ª–æ–∫–µ 2  
            block3: Array(4).fill(false), // 4 –≤–∏–¥–µ–æ –≤ –±–ª–æ–∫–µ 3
            block4: Array(4).fill(false)  // 4 –≤–∏–¥–µ–æ –≤ –±–ª–æ–∫–µ 4
        };
        
        // –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        this.referralStats = {
            totalReferrals: 0,
            earnedTickets: 0,
            earnedCoins: 0
        };
        
        this.init();
    }
    
    init() {
        this.loadUserData();
        this.initWheel();
        this.setupEventListeners();
        this.initTelegram();
        this.updateUI();
        this.updateWarmupProgress();
    }
    
    loadUserData() {
        const savedCoins = localStorage.getItem('raiCoins');
        const savedTickets = localStorage.getItem('spinTickets');
        const savedPurchased = localStorage.getItem('purchasedTickets');
        const savedStats = localStorage.getItem('userStats');
        const savedTasks = localStorage.getItem('completedTasks');
        const savedWarmup = localStorage.getItem('warmupProgress');
        const savedReferral = localStorage.getItem('referralStats');
        
        if (savedCoins) this.coinBalance = parseInt(savedCoins);
        if (savedTickets) this.ticketBalance = parseInt(savedTickets);
        if (savedPurchased) this.purchasedTickets = JSON.parse(savedPurchased);
        if (savedStats) this.userStats = JSON.parse(savedStats);
        if (savedTasks) this.completedTasks = JSON.parse(savedTasks);
        if (savedWarmup) this.warmupProgress = JSON.parse(savedWarmup);
        if (savedReferral) this.referralStats = JSON.parse(savedReferral);
    }
    
    saveUserData() {
        localStorage.setItem('raiCoins', this.coinBalance.toString());
        localStorage.setItem('spinTickets', this.ticketBalance.toString());
        localStorage.setItem('purchasedTickets', JSON.stringify(this.purchasedTickets));
        localStorage.setItem('userStats', JSON.stringify(this.userStats));
        localStorage.setItem('completedTasks', JSON.stringify(this.completedTasks));
        localStorage.setItem('warmupProgress', JSON.stringify(this.warmupProgress));
        localStorage.setItem('referralStats', JSON.stringify(this.referralStats));
    }
    
    initWheel() {
        this.canvas = document.getElementById('wheelCanvas');
        this.ctx = this.canvas.getContext('2d');
        this.spinButton = document.getElementById('spinButton');
        this.isSpinning = false;
        this.rotation = 0;
        
        this.prizes = [
            { name: "–†–∞–π –∫–æ–∏–Ω—ã", probability: 60, color: "#FF6B6B", type: "coins" },
            { name: "–ü–æ—Ü–µ–ª—É–π –æ—Ç –†–∞–π", probability: 20, color: "#4ECDC4", type: "kiss" },
            { name: "–î–æ–ø. —Å–ø–∏–Ω", probability: 10, color: "#45B7D1", type: "ticket" },
            { name: "–ë—É—Ç—ã–ª—å –ø–∏–≤–∞", probability: 5, color: "#FFD166", type: "beer" },
            { name: "–ü–æ–µ–∑–¥–∫–∞ –Ω–∞ –ü—Ö—É–∫–µ—Ç", probability: 5, color: "#9B5DE5", type: "trip" }
        ];
        
        this.drawWheel();
    }
    
    // ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—Å—Ç–∞—é—Ç—Å—è —Ç–∞–∫–∏–º–∏ –∂–µ –¥–æ —Ä–∞–∑–¥–µ–ª–∞ –°–ò–°–¢–ï–ú–ê –ó–ê–î–ê–ù–ò–ô)
    
    // –°–ò–°–¢–ï–ú–ê –ü–†–û–ì–†–ï–í–ê-–ì–ê–ô–î–ê
    openWarmupGuide() {
        if (this.completedTasks.warmup) {
            this.showResultModal('‚úÖ –í—ã —É–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–æ–≥—Ä–µ–≤-–≥–∞–π–¥!');
            return;
        }
        
        this.showModal('warmupModal');
        this.updateWarmupUI();
    }
    
    watchVideo(blockNumber, videoNumber) {
        if (this.completedTasks.warmup) return;
        
        const blockKey = `block${blockNumber}`;
        const videoIndex = videoNumber - 1;
        
        // –ü–æ–º–µ—á–∞–µ–º –≤–∏–¥–µ–æ –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–µ
        if (!this.warmupProgress[blockKey][videoIndex]) {
            this.warmupProgress[blockKey][videoIndex] = true;
            this.saveUserData();
            this.updateWarmupUI();
            this.updateWarmupProgress();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω –ª–∏ –±–ª–æ–∫
            this.checkBlockCompletion(blockNumber);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω –ª–∏ –≤–µ—Å—å –≥–∞–π–¥
            this.checkWarmupCompletion();
        }
    }
    
    checkBlockCompletion(blockNumber) {
        const blockKey = `block${blockNumber}`;
        const isBlockComplete = this.warmupProgress[blockKey].every(video => video === true);
        
        if (isBlockComplete) {
            // –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –±–ª–æ–∫–∞
            this.ticketBalance += 2;
            this.coinBalance += 200;
            this.saveUserData();
            this.updateUI();
            
            this.showResultModal(`üéâ –ë–ª–æ–∫ ${blockNumber} –∑–∞–≤–µ—Ä—à–µ–Ω! –ü–æ–ª—É—á–µ–Ω–æ: 2 —Å–ø–∏–Ω-–±–∏–ª–µ—Ç–∞ + 200 —Ä–∞–π –∫–æ–∏–Ω–æ–≤`);
        }
    }
    
    checkWarmupCompletion() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –±–ª–æ–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã
        const allBlocksComplete = [1, 2, 3, 4].every(blockNumber => {
            const blockKey = `block${blockNumber}`;
            return this.warmupProgress[blockKey].every(video => video === true);
        });
        
        if (allBlocksComplete && !this.completedTasks.warmup) {
            this.completeWarmup();
        }
    }
    
    completeWarmup() {
        // –û—Å–Ω–æ–≤–Ω–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –≤–µ—Å—å –≥–∞–π–¥
        this.ticketBalance += 10;
        this.coinBalance += 1000;
        this.completedTasks.warmup = true;
        this.userStats.tasksCompleted++;
        
        this.saveUserData();
        this.updateUI();
        this.updateTaskButtons();
        
        this.showResultModal('üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–æ–≥—Ä–µ–≤-–≥–∞–π–¥ –∏ –ø–æ–ª—É—á–∏–ª–∏ 10 —Å–ø–∏–Ω-–±–∏–ª–µ—Ç–æ–≤ –∏ 1000 —Ä–∞–π –∫–æ–∏–Ω–æ–≤!');
        this.hideModal('warmupModal');
    }
    
    updateWarmupUI() {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
        for (let blockNumber = 1; blockNumber <= 4; blockNumber++) {
            const blockKey = `block${blockNumber}`;
            const blockElement = document.querySelector(`.warmup-block[data-block="${blockNumber}"]`);
            
            if (blockElement) {
                this.warmupProgress[blockKey].forEach((isWatched, videoIndex) => {
                    const videoElement = blockElement.querySelector(`.video-item[data-video="${videoIndex + 1}"]`);
                    const watchButton = videoElement.querySelector('.watch-btn');
                    
                    if (isWatched) {
                        videoElement.classList.add('watched');
                        watchButton.textContent = '‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ';
                        watchButton.disabled = true;
                        watchButton.classList.add('completed');
                    }
                });
            }
        }
    }
    
    updateWarmupProgress() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        let completedBlocks = 0;
        
        for (let blockNumber = 1; blockNumber <= 4; blockNumber++) {
            const blockKey = `block${blockNumber}`;
            const watchedVideos = this.warmupProgress[blockKey].filter(video => video).length;
            const progressPercentage = (watchedVideos / 4) * 100;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
            const progressFill = document.querySelector(`.progress-block[data-block="${blockNumber}"] .progress-fill`);
            if (progressFill) {
                progressFill.style.width = `${progressPercentage}%`;
                progressFill.setAttribute('data-progress', watchedVideos);
            }
            
            if (watchedVideos === 4) {
                completedBlocks++;
            }
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å
        document.getElementById('warmupProgress').textContent = `${completedBlocks}/4`;
    }
    
    // –£–õ–£–ß–®–ï–ù–ù–ê–Ø –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê
    shareReferral() {
        const referralLink = this.generateReferralLink();
        if (window.Telegram && Telegram.WebApp) {
            Telegram.WebApp.shareUrl(referralLink, 
                '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ Rai Paradise! üé∞\n\n' +
                'üé´ –ö—Ä—É—Ç–∏ –∫–æ–ª–µ—Å–æ –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π –ø—Ä–∏–∑—ã\n' +
                'ü™ô –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π —Ä–∞–π –∫–æ–∏–Ω—ã\n' +
                'üéÅ –£—á–∞—Å—Ç–≤—É–π –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö\n' +
                'üî• –ó–Ω–∞–∫–æ–º—å—Å—è —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –ª–æ—Ä–æ–º\n\n' +
                '–ü–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –Ω–∞—á–Ω–∏ —Å–≤–æ–π –ø—É—Ç—å!'
            );
        } else {
            // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
            const shareText = `–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ Rai Paradise! üé∞

üé´ –ö—Ä—É—Ç–∏ –∫–æ–ª–µ—Å–æ –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π –ø—Ä–∏–∑—ã
ü™ô –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π —Ä–∞–π –∫–æ–∏–Ω—ã  
üéÅ –£—á–∞—Å—Ç–≤—É–π –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö
üî• –ó–Ω–∞–∫–æ–º—å—Å—è —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –ª–æ—Ä–æ–º

–ü–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ: ${referralLink}`;

            if (navigator.share) {
                navigator.share({
                    title: 'Rai Paradise - –ö–æ–ª–µ—Å–æ –§–æ—Ä—Ç—É–Ω—ã',
                    text: shareText,
                    url: referralLink,
                });
            } else {
                alert(shareText);
            }
        }
        
        // –û—Ç–º–µ—á–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ "–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞" –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ
        if (!this.completedTasks.invite) {
            this.completeTask('invite');
        }
    }
    
    copyReferral() {
        const referralLink = this.generateReferralLink();
        const shareText = `–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ Rai Paradise! üé∞

üé´ –ö—Ä—É—Ç–∏ –∫–æ–ª–µ—Å–æ –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π –ø—Ä–∏–∑—ã
ü™ô –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π —Ä–∞–π –∫–æ–∏–Ω—ã  
üéÅ –£—á–∞—Å—Ç–≤—É–π –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö
üî• –ó–Ω–∞–∫–æ–º—å—Å—è —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –ª–æ—Ä–æ–º

–ü–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ: ${referralLink}`;

        navigator.clipboard.writeText(shareText).then(() => {
            this.showResultModal('üìã –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
        }).catch(() => {
            // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
            const textArea = document.createElement('textarea');
            textArea.value = shareText;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand('copy');
            document.body.removeChild(textArea);
            this.showResultModal('üìã –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!');
        });
        
        // –û—Ç–º–µ—á–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ "–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞" –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ
        if (!this.completedTasks.invite) {
            this.completeTask('invite');
        }
    }
    
    generateReferralLink() {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
        const userId = this.generateUserId();
        return `https://t.me/your_bot?start=ref_${userId}`;
    }
    
    generateUserId() {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        let userId = localStorage.getItem('userId');
        if (!userId) {
            userId = 'user_' + Math.random().toString(36).substr(2, 9);
            localStorage.setItem('userId', userId);
        }
        return userId;
    }
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –ø–æ —Å—Å—ã–ª–∫–µ)
    addReferralBonus() {
        this.ticketBalance += 3;
        this.coinBalance += 50;
        this.referralStats.totalReferrals++;
        this.referralStats.earnedTickets += 3;
        this.referralStats.earnedCoins += 50;
        this.userStats.friendsInvited++;
        
        this.saveUserData();
        this.updateUI();
        this.updateReferralStats();
        
        this.showResultModal('üéâ –ë–æ–Ω—É—Å –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞: 3 –±–∏–ª–µ—Ç–∞ + 50 —Ä–∞–π –∫–æ–∏–Ω–æ–≤!');
    }
    
    updateReferralStats() {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
        document.getElementById('referralCount').textContent = this.referralStats.totalReferrals;
        document.getElementById('referralEarned').textContent = this.referralStats.earnedCoins;
        
        document.getElementById('profileReferralCount').textContent = this.referralStats.totalReferrals;
        document.getElementById('profileReferralTickets').textContent = this.referralStats.earnedTickets;
        document.getElementById('profileReferralCoins').textContent = this.referralStats.earnedCoins;
    }
    
    // –°–ò–°–¢–ï–ú–ê –ó–ê–î–ê–ù–ò–ô
    completeTask(taskId) {
        if (this.completedTasks[taskId]) {
            this.showResultModal('‚ùå –≠—Ç–æ –∑–∞–¥–∞–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!');
            return;
        }
        
        // –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –∑–∞–¥–∞–Ω–∏–µ
        this.ticketBalance += 3;
        this.coinBalance += 50;
        this.completedTasks[taskId] = true;
        this.userStats.tasksCompleted++;
        
        this.saveUserData();
        this.updateUI();
        this.updateTaskButtons();
        
        this.showResultModal('üéâ –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –ü–æ–ª—É—á–µ–Ω–æ: 3 —Å–ø–∏–Ω-–±–∏–ª–µ—Ç–∞ + 50 —Ä–∞–π –∫–æ–∏–Ω–æ–≤');
    }
    
    updateTaskButtons() {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∑–∞–¥–∞–Ω–∏–π
        Object.keys(this.completedTasks).forEach(taskId => {
            const button = document.querySelector(`[data-task="${taskId}"]`);
            if (button) {
                if (this.completedTasks[taskId]) {
                    button.textContent = '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ';
                    button.disabled = true;
                    button.classList.add('completed');
                } else {
                    button.disabled = false;
                    button.classList.remove('completed');
                }
            }
        });
    }
    
    // ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', () => {
    window.raiApp = new RaiParadiseApp();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–æ–≥—Ä–µ–≤–∞
    document.getElementById('closeWarmupModal').addEventListener('click', () => {
        window.raiApp.hideModal('warmupModal');
    });
});
